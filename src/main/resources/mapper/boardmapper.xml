<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.cotudy.mapper.BoardMapper">
	<select id="selectFreeBoardList" parameterType="map" resultType="com.project.cotudy.model.FreeBoardDto">
		<![CDATA[
			SELECT a.*,ifnull(b.cnt,0) as free_reply_cnt FROM (select p.*, @rownum := @rownum+1 as rownum from (select * from free_board where free_deleted = 'N' order by free_num desc) p) a
LEFT JOIN (SELECT free_num, count(free_num) as cnt FROM free_board_reply GROUP BY free_num) b on a.free_num = b.free_num where (@rownum:=0)=0 and free_deleted = 'N' and rownum between #{startNo} and #{endNo};
		]]>
	</select>
	<select id="getListCount" resultType="int">
		<![CDATA[
			select count(*) from free_board where free_deleted = 'N'
			]]>
	</select>
	<select id="getSearchkeyListCount" parameterType="com.project.cotudy.model.SearchDto" resultType="int">
		<![CDATA[
			select count(*) from free_board where free_deleted = 'N' and ${searchType} like CONCAT('%',#{searchKeyword},'%')
			]]>
	</select>
	<select id="getSearchsubListCount" parameterType="com.project.cotudy.model.SearchDto" resultType="int">
		<![CDATA[
			select count(*) from free_board where free_deleted = 'N' and free_subject = #{freeSubject}
			]]>
	</select>
	<select id="getSearchsubkeyListCount" parameterType="com.project.cotudy.model.SearchDto" resultType="int">
		<![CDATA[
			select count(*) from free_board where free_deleted = 'N' and ${searchType} like CONCAT('%',#{searchKeyword},'%') and free_subject = #{freeSubject}
			]]>
	</select>

	<!-- only말머리 검색 -->
	<select id="selectFreeBoardSubSearchList" parameterType="map" resultType="com.project.cotudy.model.FreeBoardDto">
		<![CDATA[
			SELECT
				a.*
			FROM
		(select p.*, @rownum := @rownum+1 as rownum from (select * from free_board where free_deleted = 'N' AND free_subject = #{searchdto.freeSubject} order by free_num desc ) p) a
		 where
				(@rownum:=0)=0 and free_deleted = 'N' and rownum between #{startNo} and #{endNo}
		]]>
	</select>


	<!-- only키워드 검색 -->
	<select id="selectFreeBoardKeySearchList" parameterType="com.project.cotudy.model.SearchDto" resultType="com.project.cotudy.model.FreeBoardDto">
		<![CDATA[
			SELECT
				a.*
			FROM
(select p.*, @rownum := @rownum+1 as rownum from (select * from free_board where free_deleted = 'N' AND ${searchdto.searchType} like CONCAT('%',#{searchdto.searchKeyword},'%') order by free_num desc) p) a
where
				(@rownum:=0)=0 and free_deleted = 'N' and rownum between #{startNo} and #{endNo}
		]]>
	</select>

	<!-- 키워드 + 말머리 검색 -->
	<select id="selectFreeBoardSubKeySearchList" parameterType="map" resultType="com.project.cotudy.model.FreeBoardDto">
		<![CDATA[
			SELECT
			a.*
			FROM
				(select p.*, @rownum := @rownum+1 as rownum from (select * from free_board where free_deleted = 'N' AND ${searchdto.searchType} like CONCAT('%',#{searchdto.searchKeyword},'%')
				AND free_subject = #{searchdto.freeSubject} order by free_num desc) p) a where
				(@rownum:=0)=0 and free_deleted = 'N' and rownum between #{startNo} and #{endNo}
		]]>
	</select>


	<insert id="insertFreeBoard" parameterType="com.project.cotudy.model.FreeBoardDto"
			useGeneratedKeys="true" keyProperty="freeNum">
		<![CDATA[
			INSERT INTO free_board
			(
				free_title,
				free_cont,
				free_created_date,
				mem_id,
				free_subject
			)
			VALUES
			(
				#{freeTitle},
				#{freeCont},
				NOW(),
				#{memId},
				#{freeSubject}
			)
		]]>
	</insert>

	<select id="selectFreeBoardCont" parameterType="int" resultType="com.project.cotudy.model.FreeBoardDto">
		<![CDATA[
			SELECT
				free_num,
				free_title,
				free_cont,
				free_hit,
				DATE_FORMAT(free_created_date, '%Y.%m.%d %H:%i:%s') AS free_created_date,
				DATE_FORMAT(free_updated_date, '%Y.%m.%d %H:%i:%s') AS free_updated_date,
				mem_id,
				free_subject
			FROM
				free_board
			WHERE
				free_num = #{freeNum}
				AND free_deleted = 'N'
		]]>
	</select>

	<select id="selectBoardFileDto" parameterType="int" resultType="com.project.cotudy.model.BoardFileDto">
		<![CDATA[
			SELECT
				*
			FROM
				freeboard_file
			WHERE
				free_num = #{freeNum} and deleted_yn = 'N'
		]]>
	</select>


	<update id="updateFreeBoardHitCount" parameterType="int">
		<![CDATA[
			UPDATE
				free_board
			SET
				free_hit = free_hit + 1
			WHERE
				free_num = #{freeNum}
		]]>
	</update>

	<update id="updateFreeBoard" parameterType="com.project.cotudy.model.FreeBoardDto">
		<![CDATA[
			UPDATE free_board SET
				free_title = #{freeTitle},
				free_cont = #{freeCont},
				free_updated_date = Now(),
				free_subject = #{freeSubject}
			WHERE
				free_num = #{freeNum}
		]]>
	</update>



	<update id="deleteFreeBoard" parameterType="int">
		<![CDATA[
			UPDATE free_board SET
				free_deleted = 'Y',
				free_updated_date = Now()
			WHERE
				free_num = #{freeNum}
		]]>
	</update>


	<!-- 파일업로드관련 -->

	<insert id="insertBoardFileList" parameterType="com.project.cotudy.model.BoardFileDto">
		<![CDATA[
			INSERT INTO freeboard_file
			(
				free_num,
				original_file_name,
				stored_file_path,
				file_size,
				created_datetime
			)
			VALUES
		]]>
		<foreach collection="list" item="item" separator=",">
			(
			#{item.freeNum},
			#{item.originalFileName},
			#{item.storedFilePath},
			#{item.fileSize},
			NOW()
			)
		</foreach>
	</insert>

	<select id="selectBoardFileList" parameterType="int" resultType="com.project.cotudy.model.BoardFileDto">
		<![CDATA[
			SELECT
				*
			FROM
				freeboard_file
			WHERE
				free_num = #{freeNum}
				AND deleted_yn = 'N'
		]]>
	</select>

	<select id="selectBoardFileInformation" parameterType="map" resultType="com.project.cotudy.model.BoardFileDto">
		<![CDATA[
			SELECT
				*
			FROM
				freeboard_file
			WHERE
				idx = #{idx}
				AND free_num = #{freeNum}
				AND deleted_yn = 'N'
		]]>
	</select>
	<delete id="deleteFreeBoardfile" parameterType="int">
		<![CDATA[
			delete from freeboard_file where idx = #{idx}
		]]>
	</delete>
	<insert id="writeFreeReplyBoard" parameterType="com.project.cotudy.model.FreeBoardReplyDto">
           insert into free_board_reply (free_num,reply_cont,mem_id,reply_step,reply_indent,reply_created_date) values (#{freeNum},#{replyCont},#{memId}, default, 1,now());
    </insert>
	<select id="selectFreeBoardReplyList" parameterType="int" resultType="com.project.cotudy.model.FreeBoardReplyDto">
        select * from free_board_reply where free_num = #{freeNum} order by if(isnull(reply_step),free_reply_num,reply_step),reply_indent ;
    </select>
	<insert id="writeFreeBoardRereply" parameterType="com.project.cotudy.model.FreeBoardReplyDto">
		insert into free_board_reply (free_num,reply_cont,mem_id,reply_step,reply_indent,reply_created_date) values (#{freeNum},#{replyCont},#{memId}, #{freeReplyNum}, (#{replyIndent}+1),now());
	</insert>

	<!-- 스터디 전체 목록 -->
	<select id="selectStudyBoardList" resultType="com.project.cotudy.model.StudyBoardDto">
<![CDATA[
           select * from study_board where study_status='N' order by study_num desc
       ]]>
   </select>
	<!-- 스터디 세부 내용 -->
	<select id="selectStudyBoardCont" parameterType="int" resultType="com.project.cotudy.model.StudyBoardDto">
<![CDATA[
           select * from study_board where study_status='N' and study_num=#{studyNum}
       ]]>
    </select>
	<update id="modifyFreeBoardReply" parameterType="com.project.cotudy.model.FreeBoardReplyDto">
		update free_board_reply set reply_cont = #{replyCont},reply_created_date = Now() where free_reply_num = #{freeReplyNum}
	</update>
	<delete id="deleteFreeBoardReply" parameterType="int">
		delete from free_board_reply where free_reply_num = #{freeReplyNum}
	</delete>
	<delete id="deleteFreeBoardRereply" parameterType="int">
		delete from free_board_reply where reply_step = #{freeReplyNum}
	</delete>
	<!--스터디 추가-->
	<insert id="insertStudyBoard" parameterType="com.project.cotudy.model.StudyBoardDto" useGeneratedKeys="true" keyProperty="studyNum">
		<![CDATA[
		insert into study_board (mem_id,study_title,study_cont,study_start_date,study_end_date,study_area,study_keyword,study_status,study_openchat,study_created)
		values(#{memId},#{studyTitle},#{studyCont},#{studyStartDate},#{studyEndDate},#{studyArea},#{studyKeyword},'N',#{studyOpenchat},now())
		]]>
	</insert>
    <!-- 즐겨찾기한 북마크 리스트 가져오기 -->
    <select id="myBookmark" parameterType="String" resultType="com.project.cotudy.model.StudyBoardDto">
      select sb.* from study_board as sb join bookmark as bm ON bm.study_num where bm.mem_id=#{memId} and sb.study_num = bm.study_num and sb.study_status = 'N'
    </select>

	<!--북마크 새로고침 체크 -->
	<select id="contBookmark" parameterType="map" resultType="Integer">
		select count(*) from bookmark where mem_id=#{memId} AND study_num=${studyNum};
	</select>

	<!--스터디 게시판 글 삭제 -->
	<update id="deleteStudyBoard" parameterType="Integer">
		UPDATE  study_board SET study_status='Y' where study_num=#{studyNum};
	</update>

	<!--스터디 게시판 글 수정 -->
	<update id="updateStudyBoard" parameterType="com.project.cotudy.model.StudyBoardDto">
		UPDATE study_board SET study_title=#{studyTitle}, study_cont=#{studyCont}, study_start_date=#{studyStartDate}, study_end_date=#{studyEndDate},study_area=#{studyArea},study_keyword=#{studyKeyword},study_openchat=#{studyOpenchat} where study_num=#{studyNum};
	</update>


    <insert id="insertStudyBoardReply" parameterType="com.project.cotudy.model.StudyBoardReplyDto">
        insert into study_board_reply (study_num,study_reply_cont,mem_id,study_reply_step,study_reply_indent,study_reply_created_time) values (#{studyNum},#{studyReplyCont},#{memId}, default, 1,now());
    </insert>
	<select id="selectStudyBoardReplyList" parameterType="int" resultType="com.project.cotudy.model.StudyBoardReplyDto">
		select * from study_board_reply where study_num = #{studyNum} order by if(isnull(study_reply_step),study_reply_num,study_reply_step),study_reply_indent ;
	</select>

	<delete id="deleteStudyBoardReply" parameterType="int">
		delete from study_board_reply where study_reply_num = #{studyReplyNum}
	</delete>

    <update id="updateStudyBoardReply" parameterType="map">
        update study_board_reply set study_reply_cont=#{studyReplyCont},study_reply_created_time = now() where study_reply_num=#{studyReplyNum}
    </update>

	<insert id="insertStudyBoardReReply" parameterType="com.project.cotudy.model.StudyBoardReplyDto">
		insert into study_board_reply (study_num,study_reply_cont,mem_id,study_reply_step,study_reply_indent,study_reply_created_time) values (#{studyNum},#{studyReplyCont},#{memId}, #{studyReplyNum}, (#{studyReplyIndent}+1),now());
	</insert>
	<delete id="deleteStudyBoardReReply" parameterType="int">
		delete from study_board_reply where study_reply_step = #{studyReplyNum}
	</delete>
</mapper>